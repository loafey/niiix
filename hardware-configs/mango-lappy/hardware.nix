# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/a7d3f40c-a480-413f-ac60-ea8e0ae9cefe";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-4c646ef1-565a-40c9-93cb-834f4a9b6e59".device = "/dev/disk/by-uuid/4c646ef1-565a-40c9-93cb-834f4a9b6e59";

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/6EA7-B2D6";
      fsType = "vfat";
    };

  swapDevices = lib.mkForce [];
  #  [{
  #    device = "/var/lib/swapfile";
  #    size = 16 * 1024;
  #  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
